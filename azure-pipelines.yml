# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
 name: skr_pool
 demands:
  - agent.name -equals skr_pool

steps:
- script: |
   sudo apt-get install openjdk-17-jdk -y  
  displayName: "Installing JDK 17"

- task: JavaToolInstaller@0
  displayName: Using JDK 17
  inputs:
    versionSpec: "17"
    jdkArchitectureOption: x64
    jdkSourceOption: "PreInstalled"

- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Use Node version 16'
  
- download: none
- checkout: self

- script: |
   npm install
  displayName: "NPM Install"

- script: |
   npx playwright install --with-deps
  displayName: "Playwright Install"

- script: |
    set CI=true
    set PLAYWRIGHT_JUNIT_OUTPUT_NAME=results.xml
    npx playwright test
  displayName: "Run Playwright Tests"
  continueOnError: true

- script: npx playwright test --reporter=line,allure-playwright
  displayName: 'Use Allure reports'
  continueOnError: true

- script: npx allure generate ./allure-results --clean
  displayName: 'Generate Allure reports and clean'
  continueOnError: true

- task: PublishAllureReport@1
  displayName: Publish Report
  inputs:
    allureVersion: 2.27.0
    testResultsDir: allure-results
  continueOnError: true
    
- task: ArchiveFiles@2
  displayName: 'Add playwright-report to Archive'
  inputs:
    rootFolderOrFile: '$(Pipeline.Workspace)/s/playwright-report/'
    archiveFile: '$(Agent.TempDirectory)/$(Build.BuildId)_$(System.JobAttempt)$(System.StageAttempt).zip'

- task: ArchiveFiles@2
  displayName: 'Add test-results to Archive'
  inputs:
    rootFolderOrFile: '$(Pipeline.Workspace)/s/test-results/'
    archiveFile: '$(Agent.TempDirectory)/$(Build.BuildId)_$(System.JobAttempt)$(System.StageAttempt).zip'
    replaceExistingArchive: false

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifacts'
  inputs:
    targetPath: '$(Agent.TempDirectory)/$(Build.BuildId)_$(System.JobAttempt)$(System.StageAttempt).zip'
    artifact: pipeline-artifacts

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Pipeline.Workspace)/s/results.xml'
    testRunTitle: 'Playwright ADO Demo - $(System.StageName)'
  displayName: 'Publish Test Results'
